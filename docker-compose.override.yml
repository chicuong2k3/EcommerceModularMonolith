version: '3.9'

services:
  portainer:
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  seq:
    container_name: seq
    restart: always
    ports:
      - "5341:5431"
    volumes:
      - seq_data:/data
    environment:
      - ACCEPT_EULA=Y
      #SEQ_API_KEY=your_seq_api_key

  jaeger:
    container_name: jaeger
    restart: always
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"

  pgadmin:
    container_name: pgAdmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "15433:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin


  database:
    container_name: database
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce
    volumes:
      - database_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
  
  redis:
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./.containers/rabbitmq/data/:/var/lib/rabbitmq
      - ./.containers/rabbitmq/log/:/var/log/rabbitmq
         
  ecommerce.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Host=database;Database=ecommerce;Username=postgres;Password=postgres;Trust Server Certificate=true
      - ConnectionStrings__Cache=redis:6379
      - ConnectionStrings__Mongo=mongodb://admin:admin@mongodb:27017
    ports:
      - "7200:8080"
      - "7210:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started