@page "/catalog/product-attributes/create"

@inherits FluxorComponent
@inject IState<ProductAttributeState> ProductAttributeState
@inject IDispatcher Dispatcher
@inject NavigationManager NavigationManager

<PageTitle>Tạo thuộc tính sản phẩm</PageTitle>

<RadzenTemplateForm Data="@model" Submit="@((CreateProductAttributeRequest request) => HandleValidSubmit(request))">
    <RadzenStack Gap="8">
        <RadzenStack>
            <RadzenFormField Text="Tên thuộc tính" Variant="Variant.Outlined" AllowFloatingLabel="false">
                <ChildContent>
                    <RadzenTextBox Name="Name" @bind-Value="@model.Name" />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="Name" Text="Tên thuộc tính không được để trống." />
                </Helper>
            </RadzenFormField>

        </RadzenStack>
        <RadzenStack>
            <RadzenButton ButtonType="ButtonType.Submit" Variant="Variant.Flat" Text="Lưu thay đổi" Disabled="@ProductAttributeState.Value.IsCreating" />
            <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Text="Thoát" Click="@(() => NavigationManager.NavigateTo("/catalog/product-attributes"))" />
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>


@code {
    CreateProductAttributeRequest model = new();

    protected override void OnInitialized()
    {
        Dispatcher.Dispatch(new SetBreadcrumbAction(new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Trang chủ", "/"),
            new BreadcrumbItem("Thuộc tính sản phẩm", "/catalog/product-attributes"),
            new BreadcrumbItem("Tạo thuộc tính sản phẩm", "")
        }));

        base.OnInitialized();
    }

    private void HandleValidSubmit(CreateProductAttributeRequest request)
    {
        Dispatcher.Dispatch(new CreateProductAttributeAction(request));
    }
}