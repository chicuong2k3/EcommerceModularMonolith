@page "/catalog/categories/create"


@inherits FluxorComponent

@inject IDispatcher Dispatcher
@inject IState<CategoryState> CategoryState
@inject NavigationManager NavigationManager

<PageTitle>Tạo danh mục</PageTitle>

<RadzenTemplateForm Data="@model" Submit="@((CreateCategoryRequest request) => HandleValidSubmit(request))">
    <RadzenStack Gap="8">
        <RadzenStack>
            <RadzenFormField Text="Tên danh mục" Variant="Variant.Outlined" AllowFloatingLabel="false">
                <ChildContent>
                    <RadzenTextBox Name="Name" @bind-Value="@model.Name" />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="Name" Text="Tên danh mục không được để trống." />
                </Helper>
            </RadzenFormField>
            <RadzenFormField Text="Danh mục cha" Variant="Variant.Outlined" AllowFloatingLabel="false">
                <ChildContent>
                    <RadzenDropDown Name="ParentCategoryId"
                                    Data="@CategoryState.Value.Categories"
                                    TextProperty="@nameof(CategoryResponse.Name)"
                                    ValueProperty="@nameof(CategoryResponse.Id)"
                                    @bind-Value="@model.ParentCategoryId" />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="ParentCategoryId" Text="Danh mục cha không được để trống." />
                </Helper>
            </RadzenFormField>
        </RadzenStack>
        <RadzenStack>
            <RadzenButton ButtonType="ButtonType.Submit" Variant="Variant.Flat" Text="Lưu thay đổi" Disabled="@CategoryState.Value.IsCreating" />
            <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Text="Thoát" Click="@(() => NavigationManager.NavigateTo("/catalog/categories"))" />
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>


@code {
    CreateCategoryRequest model = new();

    protected override void OnInitialized()
    {
        if (!CategoryState.Value.Categories.Any())
        {
            Dispatcher.Dispatch(new FetchCategoriesAction());
        }

        Dispatcher.Dispatch(new SetBreadcrumbAction(new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Trang chủ", "/"),
            new BreadcrumbItem("Danh mục", "/catalog/categories"),
            new BreadcrumbItem("Tạo danh mục", "")
        }));

        base.OnInitialized();
    }

    private void HandleValidSubmit(CreateCategoryRequest request)
    {
        Dispatcher.Dispatch(new CreateCategoryAction(request));
    }
}